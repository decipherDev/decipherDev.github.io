(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{457:function(e,s,a){"use strict";a.r(s);var t=a(17),n=Object(t.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey},scopedSlots:e._u([{key:"header",fn:function(){return[a("h1",{attrs:{id:"examples-using-java-streams"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples-using-java-streams"}},[e._v("#")]),e._v(" Examples using Java streams")])]},proxy:!0}])},[a("h2",{attrs:{id:"group-employee-on-the-basis-of-department"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#group-employee-on-the-basis-of-department"}},[e._v("#")]),e._v(" Group employee on the basis of department")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('List.of(new Employee("Arun", "Engineering"), \n        new Employee("Brijesh", "Devops"), \n        new Employee("Reema", "HR"))\n     .stream()\n     .collect(Collectors.groupingBy(Employee::department));\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("h2",{attrs:{id:"find-the-average-sum-min-max-count"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#find-the-average-sum-min-max-count"}},[e._v("#")]),e._v(" Find the average, sum, min, max, count")]),e._v(" "),a("code-group",[a("code-block",{attrs:{title:"summarizingInt"}},[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("IntSummaryStatistics summary = List.of(5, 2, 4, 6, 7, 9)\n                                   .stream()\n                                   .collect(Collectors.summarizingInt(Integer::intValue));\nsummary.getAverage(); summary.getSum(); summary.getMin(); summary.getMax(); summary.getCount()\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])])]),e._v(" "),a("code-block",{attrs:{title:"summaryStatistics"}},[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('double avg = List.of(new Customer(1, "hello"), new Customer(2, "hi"), new Customer(3, "bye"))\n                  .stream()\n                  .mapToInt(c -> c.id)\n                  .summaryStatistics()\n                  .getAverage();\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])])])],1),e._v(" "),a("h2",{attrs:{id:"find-the-frequency-of-the-characters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#find-the-frequency-of-the-characters"}},[e._v("#")]),e._v(" Find the frequency of the characters")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('String s = "hello";\ns.chars()\n .mapToObj(s -> (char)s)\n .collect(Collectors.groupingBy(s -> s, Collectors.counting()));\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("h2",{attrs:{id:"find-the-first-non-repeating-character-from-a-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#find-the-first-non-repeating-character-from-a-string"}},[e._v("#")]),e._v(" Find the first non repeating character from a String")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(' "hello".chars()\n        .mapToObj(c -> (char)c)\n        .collect(Collectors.groupingBy(c -> c, LinkedHashMap::new, Collectors.counting()))\n        .entrySet()\n        .stream()\n        .filter(e -> e.getValue() == 1)\n        .map(e -> e.getKey())\n        .findFirst()\n        .get();\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("h2",{attrs:{id:"find-the-duplicates-and-print-them-in-sorted-order"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#find-the-duplicates-and-print-them-in-sorted-order"}},[e._v("#")]),e._v(" Find the duplicates and print them in sorted order")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"nonrepeatingword".chars()\n       .mapToObj(c -> (char) c)\n       .collect(Collectors.groupingBy(Function.identity(), TreeMap::new, Collectors.counting()))\n       .entrySet()\n       .stream()\n       .filter(e -> e.getValue() != 1)\n       .map(e -> e.getKey())\n       .forEach(key -> System.out.print(key+" "));\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("h2",{attrs:{id:"convert-the-list-into-an-array"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#convert-the-list-into-an-array"}},[e._v("#")]),e._v(" Convert the list into an Array")]),e._v(" "),a("code-group",[a("code-block",{attrs:{title:"primitive int array"}},[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("int[] arr = List.of(1,2,3,4,5).stream().mapToInt(x -> Integer.valueOf(x)).toArray();\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])])]),e._v(" "),a("code-block",{attrs:{title:"Integer array"}},[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Integer[] arrOne = List.of(1,2,3,4,5).toArray(new Integer[0]);\nInteger[] arrTwo = List.of(1,2,3,4,5).toArray(Integer[]::new);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])])]),e._v(" "),a("code-block",{attrs:{title:"String array"}},[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('String[] arr = List.of("A", "B", "C").toArray(new String[0]);\n\nString[] arr = List.of("A", "B", "C").toArray(String[]::new);\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])])])],1)],1)}),[],!1,null,null,null);s.default=n.exports}}]);